__	Class List
	WindowWin32
--
	inc/uair/windowwin32.hpp
	src/windowwin32.cpp
--
	class WindowWin32
--
	Brief
--
	Detailed
__

+	public
	WindowWin32()
=	Brief
==	Detailed

+	public
	WindowWin32(const std::string& windowTitle, const WindowDisplaySettings& settings, const unsigned long& windowStyle = WindowStyles::Visible | WindowStyles::Titlebar | WindowStyles::Close)
=	Brief
==	Detailed
>	const std::string& windowTitle: 
>	const WindowDisplaySettings& settings: 
>	const unsigned long& windowStyle: 

+	public
	WindowWin32(const WindowWin32& other) = delete
=	Brief
==	Detailed
>	const WindowWin32& other: 

+	public
	WindowWin32(WindowWin32&& other)
=	Brief
==	Detailed
>	WindowWin32&& other: 

+	public
	virtual ~WindowWin32()
=	Brief
==	Detailed

+	public
	WindowWin32& operator=(WindowWin32 other)
=	Brief
==	Detailed
>	WindowWin32 other: 
<	Return

+	public
	friend void swap(WindowWin32& first, WindowWin32& second)
=	Brief
==	Detailed
>	WindowWin32& first: 
>	WindowWin32& second: 

+	public
	void Process()
=	Brief
==	Detailed

+	public
	bool Display() const
=	Brief
==	Detailed
<	Return

+	public
	void Quit()
=	Brief
==	Detailed

+	public
	bool IsOpen() const
=	Brief
==	Detailed
<	Return

+	public
	WindowDisplaySettings GetCurrentDS() const
=	Brief
==	Detailed
<	Return

+	public
	std::set<WindowDisplaySettings> GetSupportedDS() const
=	Brief
==	Detailed
<	Return

+	public
	unsigned int GetWidth() const
=	Brief
==	Detailed
<	Return

+	public
	unsigned int GetHeight() const
=	Brief
==	Detailed
<	Return

+	public
	unsigned int GetActualWidth() const
=	Brief
==	Detailed
<	Return

+	public
	unsigned int GetActualHeight() const
=	Brief
==	Detailed
<	Return

+	public
	void MakeCurrent(OpenGLContext& context)
=	Brief
==	Detailed
>	OpenGLContext& context: 

+	public
	std::pair<glm::ivec2, glm::ivec2> GetMouseCoords()
=	Brief
==	Detailed
<	Return

+	public
	std::pair<glm::ivec2, glm::ivec2> SetMouseCoords(const glm::ivec2& newCoords, const CoordinateSpace& coordinateSpace = CoordinateSpace::Local)
=	Brief
==	Detailed
>	const glm::ivec2& newCoords: 
>	const CoordinateSpace& coordinateSpace: 
<	Return


+	protected
	void SetUpWindow()
=	Brief
==	Detailed

+	protected
	LRESULT CALLBACK HandleEvents(const HWND& hWnd, const UINT& message, const WPARAM& wParam, const LPARAM& lParam)
=	Brief
==	Detailed
>	const HWND& hWnd: 
>	const UINT& message: 
>	const WPARAM& wParam: 
>	const LPARAM& lParam: 
<	Return

+	protected
	static LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
=	Brief
==	Detailed
>	HWND hWnd: 
>	UINT message: 
>	WPARAM wParam: 
>	LPARAM lParam: 
<	Return

+	protected
	Keyboard ToKeyboard(const WPARAM& code, const LPARAM& flags) const
=	Brief
==	Detailed
>	const WPARAM& code: 
>	const LPARAM& flags: 
<	Return

+	protected
	Device ToDevice(const unsigned int& valueID) const
=	Brief
==	Detailed
>	const unsigned int& valueID: 
<	Return

+	protected
	bool RegisterInputDevice(HANDLE deviceHandle)
=	Brief
==	Detailed
>	HANDLE deviceHandle: 
<	Return

+	protected
	bool GetDeviceCapabilities(const PHIDP_PREPARSED_DATA& preparsedData, HIDP_CAPS& caps, PHIDP_BUTTON_CAPS& buttonCaps, std::unique_ptr<BYTE[]>& buttonCapsBuffer, PHIDP_VALUE_CAPS& valueCaps, std::unique_ptr<BYTE[]>& valueCapsBuffer)
=	Brief
==	Detailed
>	const PHIDP_PREPARSED_DATA& preparsedData: 
>	HIDP_CAPS& caps: 
>	PHIDP_BUTTON_CAPS& buttonCaps: 
>	std::unique_ptr<BYTE[]>& buttonCapsBuffer: 
>	PHIDP_VALUE_CAPS& valueCaps: 
>	std::unique_ptr<BYTE[]>& valueCapsBuffer: 
<	Return


-	protected
	static unsigned int mWindowCount
=	Brief
==	Detailed

-	protected
	HWND mWindowHandle
=	Brief
==	Detailed
>	Default

-	protected
	HDC mDeviceContext
=	Brief
==	Detailed
>	Default

-	protected
	MessageQueue mMessageQueue
=	Brief
==	Detailed

-	protected
	bool mOpen
=	Brief
==	Detailed
>	Default

-	protected
	std::string mWinTitle
=	Brief
==	Detailed

-	protected
	WindowDisplaySettings mWinDS
=	Brief
==	Detailed

-	protected
	glm::uvec2 mWinSize
=	Brief
==	Detailed

-	protected
	glm::uvec2 mActualSize
=	Brief
==	Detailed

-	protected
	glm::ivec2 mWinPos
=	Brief
==	Detailed

-	protected
	unsigned long mWinStyle
=	Brief
==	Detailed

-	protected
	bool mHasFocus
=	Brief
==	Detailed

-	protected
	unsigned int mCaptureCount
=	Brief
==	Detailed

-	protected
	glm::ivec2 mGlobalMouse
=	Brief
==	Detailed

-	protected
	glm::ivec2 mLocalMouse
=	Brief
==	Detailed

-	protected
	std::map<HANDLE, InputDevice> mInputDevices
=	Brief
==	Detailed

-	protected
	int mInputDeviceIDCounter
=	Brief
==	Detailed
>	Default


~	protected
	struct InputDevice
=	Description
<	Link
