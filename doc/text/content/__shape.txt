__	Class List
	Shape
--
	inc/uair/shape.hpp
	src/shape.cpp
--
	class Shape : public Polygon, public Renderable
--
	Brief
--
	Detailed
__

+	public
	Shape() = default
=	Brief
==	Detailed

+	public
	explicit Shape(const std::vector<Contour>& contours, const CoordinateSpace& coordinateSpace = CoordinateSpace::Local)
=	Brief
==	Detailed
>	const std::vector<Contour>& contours: 
>	const CoordinateSpace& coordinateSpace: 

+	public
	explicit Shape(const ClipperLib::Paths& clipperPaths)
=	Brief
==	Detailed
>	const ClipperLib::Paths& clipperPaths: 

+	public
	void AddContour(const Contour& contour, const CoordinateSpace& coordinateSpace = CoordinateSpace::Local)
=	Brief
==	Detailed
>	const Contour& contour: 
>	const CoordinateSpace& coordinateSpace: 

+	public
	void AddContours(const std::vector<Contour>& contours, const CoordinateSpace& coordinateSpace = CoordinateSpace::Local)
=	Brief
==	Detailed
>	: 
<	Return

+	public
	void Offset(float distance, const ClipperLib::JoinType& miterType = ClipperLib::jtRound, const double& miterLimit = 2.0d)
=	Brief
==	Detailed
>	float distance: 
>	const ClipperLib::JoinType& miterType: 
>	const double& miterLimit: 

+	public
	void PositionContoursAtOrigin()
=	Brief
==	Detailed

+	public
	void FromClipperPaths(const ClipperLib::Paths& clipperPaths)
=	Brief
==	Detailed
>	const ClipperLib::Paths& clipperPaths: 

+	public
	Shape GetTransformed() const
=	Brief
==	Detailed
<	Return

+	public
	std::string GetTag() const
=	Brief
==	Detailed
<	Return

+	public
	void Process()
=	Brief
==	Detailed

+	public
	void SetWindingRule(const WindingRule& windingRule)
=	Brief
==	Detailed
>	const WindingRule& windingRule: 

+	public
	void AddColour(const std::vector<glm::vec4>& colour)
=	Brief
==	Detailed
>	const std::vector<glm::vec4>& colour: 

+	public
	void AddFrame(ResourcePtr<Texture> texture, const unsigned int& layer)
=	Brief
==	Detailed
>	ResourcePtr<Texture> texture: 
>	const unsigned int& layer: 

+	public
	void AddFrameCoords(ResourcePtr<Texture> texture, const unsigned int& layer, std::vector<glm::vec2> textureCoords)
=	Brief
==	Detailed
>	ResourcePtr<Texture> texture: 
>	const unsigned int& layer: 
>	std::vector<glm::vec2> textureCoords: 

+	public
	void AddFrameRect(ResourcePtr<Texture> texture, const unsigned int& layer, const std::vector<glm::vec2>& textureRect)
=	Brief
==	Detailed
>	ResourcePtr<Texture> texture: 
>	const unsigned int& layer: 
>	const std::vector<glm::vec2>& textureRect: 

+	public
	void AddFrameStrip(ResourcePtr<Texture> texture, const unsigned int& layer, const unsigned int& numFrames, const unsigned int& numPerRow, const unsigned int& numPerCol, const glm::ivec2& offset = glm::ivec2(0, 0))
=	Brief
==	Detailed
>	ResourcePtr<Texture> texture: 
>	const unsigned int& layer: 
>	const unsigned int& numFrames: 
>	const unsigned int& numPerRow: 
>	const unsigned int& numPerCol: 
>	const glm::ivec2& offset: 

+	public
	void AddFrame(Texture* texture, const unsigned int& layer)
=	Brief
==	Detailed
>	Texture* texture: 
>	const unsigned int& layer: 

+	public
	void AddFrameCoords(Texture* texture, const unsigned int& layer, std::vector<glm::vec2> textureCoords)
=	Brief
==	Detailed
>	Texture* texture: 
>	const unsigned int& layer: 
>	std::vector<glm::vec2> textureCoords: 

+	public
	void AddFrameRect(Texture* texture, const unsigned int& layer, const std::vector<glm::vec2>& textureRect)
=	Brief
==	Detailed
>	Texture* texture: 
>	const unsigned int& layer: 
>	const std::vector<glm::vec2>& textureRect: 

+	public
	void AddFrameStrip(Texture* texture, const unsigned int& layer, const unsigned int& numFrames, const unsigned int& numPerRow, const unsigned int& numPerCol, const glm::ivec2& offset = glm::ivec2(0, 0))
=	Brief
==	Detailed
>	Texture* texture: 
>	const unsigned int& layer: 
>	const unsigned int& numFrames: 
>	const unsigned int& numPerRow: 
>	const unsigned int& numPerCol: 
>	const glm::ivec2& offset: 

+	public
	void SetAnimation(const float& speed, const unsigned int& start, const unsigned int& end, const int& loops = -1)
=	Brief
==	Detailed
>	const float& speed: 
>	const unsigned int& start: 
>	const unsigned int& end: 
>	const int& loops: 

+	public
	void SetCurrentFrame(const unsigned int& frame)
=	Brief
==	Detailed
>	const unsigned int& frame: 

+	public
	unsigned int GetFrameCount()
=	Brief
==	Detailed
<	Return


+	protected
	std::list<RenderBatchData> Upload()
=	Brief
==	Detailed
<	Return


+	private
	void CalculateTexCoords(const std::vector<glm::vec2>& points, const std::vector<glm::vec2>& texRect, std::vector<glm::vec2>& texCoordsLocation)
=	Brief
==	Detailed
>	const std::vector<glm::vec2>& points: 
>	const std::vector<glm::vec2>& texRect: 
>	std::vector<glm::vec2>& texCoordsLocation: 

+	private
	void CreateVBOVertices(RenderBatchData& batchData, const std::vector<glm::vec2>& vertices, std::vector<glm::vec2> texCoords, std::vector<glm::vec4> colours)
=	Brief
==	Detailed
>	RenderBatchData& batchData: 
>	const std::vector<glm::vec2>& vertices: 
>	std::vector<glm::vec2> texCoords: 
>	std::vector<glm::vec4> colours: 

+	private
	void CalculateExtraColour()
=	Brief
==	Detailed

+	private
	void CalculateExtraTexCoords(AnimationFrame& frame)
=	Brief
==	Detailed
>	AnimationFrame& frame: 


-	public
	static float mFrameLowerLimit
=	Brief
==	Detailed


-	private
	WindingRule mWindingRule
=	Brief
==	Detailed
>	Default

-	private
	std::vector< std::vector<VBOIndex> > mIndices
=	Brief
==	Detailed
>	Default

-	private
	std::vector<Triangulate::Vertex> mVertices
=	Brief
==	Detailed

-	private
	std::vector<glm::vec4> mColourArray
=	Brief
==	Detailed

-	private
	std::vector<glm::vec4> mColourArrayExtra
=	Brief
==	Detailed

-	private
	std::vector<AnimationFrame> mFrames
=	Brief
==	Detailed

-	private
	unsigned int mCurrentFrame
=	Brief
==	Detailed
>	Default

-	private
	bool mIsAnimated
=	Brief
==	Detailed
>	Default

-	private
	int mAnimationDirection
=	Brief
==	Detailed
>	Default

-	private
	float mAnimationLimit
=	Brief
==	Detailed
>	Default

-	private
	float mAnimationTimer
=	Brief
==	Detailed
>	Default

-	private
	int mAnimationLoopCount
=	Brief
==	Detailed
>	Default

-	private
	unsigned int mAnimationStartFrame
=	Brief
==	Detailed
>	Default

-	private
	unsigned int mAnimationEndFrame
=	Brief
==	Detailed
>	Default
