__	Class List
	InputManager
--
	inc/uair/inputmanager.hpp
	src/inputmanager.cpp
--
	class InputManager
--
	Brief
--
	Detailed
__

+	public
	InputManager()
=	Brief
==	Detailed

+	public
	void Process()
=	Brief
==	Detailed

+	public
	bool GetKeyboardDown(const Keyboard& key) const
=	Brief
==	Detailed
>	const Keyboard& key: 
<	Return

+	public
	bool GetKeyboardPressed(const Keyboard& key) const
=	Brief
==	Detailed
>	const Keyboard& key: 
<	Return

+	public
	bool GetKeyboardReleased(const Keyboard& key) const
=	Brief
==	Detailed
>	const Keyboard& key: 
<	Return

+	public
	unsigned int GetKeyboardState(const Keyboard& key) const
=	Brief
==	Detailed
>	const Keyboard& key: 
<	Return

+	public
	std::u16string GetInputString() const
=	Brief
==	Detailed
<	Return

+	public
	bool GetMouseDown(const Mouse& button) const
=	Brief
==	Detailed
>	const Mouse& button: 
<	Return

+	public
	bool GetMousePressed(const Mouse& button) const
=	Brief
==	Detailed
>	const Mouse& button: 
<	Return

+	public
	bool GetMouseReleased(const Mouse& button) const
=	Brief
==	Detailed
>	const Mouse& button: 
<	Return

+	public
	unsigned int GetMouseState(const Mouse& button) const
=	Brief
==	Detailed
>	const Mouse& button: 
<	Return

+	public
	int GetMouseWheel() const
=	Brief
==	Detailed
<	Return

+	public
	void SetMouseCoords(const glm::ivec2& newCoords, const CoordinateSpace& coordinateSpace = CoordinateSpace::Local)
=	Brief
==	Detailed
>	const glm::ivec2& newCoords: 
>	const CoordinateSpace& coordinateSpace: 

+	public
	glm::ivec2 GetMouseCoords(const CoordinateSpace& coordinateSpace = CoordinateSpace::Local) const
=	Brief
==	Detailed
>	const CoordinateSpace& coordinateSpace: 
<	Return

+	public
	bool DeviceExists(const int& deviceID) const
=	Brief
==	Detailed
>	const int& deviceID: 
<	Return

+	public
	const InputDevice& GetDevice(const int& deviceID) const
=	Brief
==	Detailed
>	const int& deviceID: 
<	Return

+	public
	unsigned int GetDeviceButtonCount(const int& deviceID) const
=	Brief
==	Detailed
>	const int& deviceID: 
<	Return

+	public
	bool GetDeviceButtonDown(const int& deviceID, const unsigned int& button) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const unsigned int& button: 
<	Return

+	public
	bool GetDeviceButtonPressed(const int& deviceID, const unsigned int& button) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const unsigned int& button: 
<	Return

+	public
	bool GetDeviceButtonReleased(const int& deviceID, const unsigned int& button) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const unsigned int& button: 
<	Return

+	public
	unsigned int GetDeviceButtonState(const int& deviceID, const unsigned int& button) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const unsigned int& button: 
<	Return

+	public
	unsigned int GetDeviceControlCount(const int& deviceID) const
=	Brief
==	Detailed
>	const int& deviceID: 
<	Return

+	public
	bool DeviceHasControl(const int& deviceID, const Device& control) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const Device& control: 
<	Return

+	public
	int GetDeviceControl(const int& deviceID, const Device& control) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const Device& control: 
<	Return

+	public
	int GetDeviceControlScaled(const int& deviceID, const Device& control, std::pair<int, int> range = std::make_pair(0, 255)) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const Device& control: 
>	std::pair<int, int> range: 
<	Return

+	public
	std::pair<int, int> GetDeviceControlRange(const int& deviceID, const Device& control) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const Device& control: 
<	Return

+	public
	std::vector<Device> GetDeviceLinkedDevices(const int& deviceID, const unsigned int& collectionID) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const unsigned int& collectionID: 
<	Return

+	public
	unsigned int GetDeviceLinkID(const int& deviceID, const Device& control) const
=	Brief
==	Detailed
>	const int& deviceID: 
>	const Device& control: 
<	Return


+	private
	void Reset()
=	Brief
==	Detailed

+	private
	void HandleKeyboardKeys(const Keyboard& key, const unsigned int& type)
=	Brief
==	Detailed
>	const Keyboard& key: 
>	const unsigned int& type: 

+	private
	void HandleTextInput(const char16_t& input)
=	Brief
==	Detailed
>	const char16_t& input: 

+	private
	void HandleMouseButtons(const Mouse& button, const unsigned int& type)
=	Brief
==	Detailed
>	const Mouse& button: 
>	const unsigned int& type: 

+	private
	void AddDevice(const int& deviceID, const unsigned int& buttonCount, const unsigned int& controlCount, const std::vector<InputDevice::ControlCaps>& caps)
=	Brief
==	Detailed
>	const int& deviceID: 
>	const unsigned int& buttonCount: 
>	const unsigned int& controlCount: 
>	const std::vector<InputDevice::ControlCaps>& caps: 

+	private
	void RemoveDevice(const int& deviceID)
=	Brief
==	Detailed
>	const int& deviceID: 

+	private
	void HandleDeviceButtons(const unsigned int& button, const unsigned int& type, const int& deviceID)
=	Brief
==	Detailed
>	const unsigned int& button: 
>	const unsigned int& type: 
>	const int& deviceID: 

+	private
	void HandleDeviceControls(const Device& control, const int& value, const int& deviceID)
=	Brief
==	Detailed
>	const Device& control: 
>	const int& value: 
>	const int& deviceID: 


-	public
	static std::weak_ptr<Window> mWindowPtr
=	Brief
==	Detailed
>	Default


-	private
	std::map<Keyboard, unsigned int> mKeyboardStates
=	Brief
==	Detailed

-	private
	std::map<Mouse, unsigned int> mMouseStates
=	Brief
==	Detailed

-	private
	int mMouseWheel
=	Brief
==	Detailed

-	private
	std::map<int, InputDevice> mInputDevices
=	Brief
==	Detailed

-	private
	InputDevice mDefaultDevice
=	Brief
==	Detailed

-	private
	std::u16string mInputString
=	Brief
==	Detailed


~	public
	class InputDevice
=	Description
<	Link
